import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.aspectj:aspectjtools:1.8.9'
    }
}
apply plugin: 'com.android.application'
repositories {
    mavenCentral()
}
android {
    compileSdkVersion 23
    buildToolsVersion '23.0.1'
    useLibrary 'org.apache.http.legacy'

    lintOptions {//关闭警告退出检查
        abortOnError false
    }

    defaultConfig {
        applicationId "com.lostad.app.demo"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        //一是声明 CHANNEL_NAME 是可替换值的PlaceHolder，二是为其设置默认值。
        manifestPlaceholders = [CHANNEL_NAME: "Unspecified"]
    }
    //自定义签名信息
    signingConfigs {
        myConfig {
            storeFile file("test.jks")
            storePassword "111111"
            keyAlias "test"
            keyPassword "111111"
        }
    }
    buildTypes {
        release {
            //不要忘了要在release的时候加入签名配置信息
            signingConfig signingConfigs.myConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //多渠道发布
    productFlavors {
        yingyongbao {
            manifestPlaceholders = [CHANNEL_NAME: "YINGYONGBAO"]
        }
        goapk {
            manifestPlaceholders = [CHANNEL_NAME: "goapk"]
        }
        hiapk {
            manifestPlaceholders = [CHANNEL_NAME: "hiapk"]
        }
        wandoujia {
            manifestPlaceholders = [CHANNEL_NAME: "WANDOUJIA"]
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':lib_lostad')
    compile files('libs/Android_Location_V1.3.2.jar')
    compile files('libs/org.apache.http.legacy.jar')
    compile files('libs/zxing.jar')
    compile 'org.xutils:xutils:3.1.24'
    compile 'net.frakbot:jumpingbeans:1.3.0'
    compile project(':aspectj')
}

final def log = project.logger
final def variants = project.android.applicationVariants

variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}

